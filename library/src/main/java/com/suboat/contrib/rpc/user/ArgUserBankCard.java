/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.suboat.contrib.rpc.user;

@SuppressWarnings({ "cast", "rawtypes", "serial", "unchecked", "unused" })
/**
 * 特定参数: 新建银行卡 有效条件: 参数选填
 */
public class ArgUserBankCard implements org.apache.thrift.TBase<ArgUserBankCard, ArgUserBankCard._Fields>,
		java.io.Serializable, Cloneable, Comparable<ArgUserBankCard> {

	private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(
			"ArgUserBankCard");

	private static final org.apache.thrift.protocol.TField ACC_FIELD_DESC = new org.apache.thrift.protocol.TField("acc",
			org.apache.thrift.protocol.TType.STRING, (short) 1);

	private static final org.apache.thrift.protocol.TField UID_FIELD_DESC = new org.apache.thrift.protocol.TField("uid",
			org.apache.thrift.protocol.TType.STRING, (short) 2);

	private static final org.apache.thrift.protocol.TField NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"number", org.apache.thrift.protocol.TType.STRING, (short) 3);

	private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"name", org.apache.thrift.protocol.TType.STRING, (short) 4);

	private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"phone", org.apache.thrift.protocol.TType.STRING, (short) 5);

	private static final org.apache.thrift.protocol.TField BANK_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"bank", org.apache.thrift.protocol.TType.STRING, (short) 6);

	private static final org.apache.thrift.protocol.TField BANK_START_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"bankStart", org.apache.thrift.protocol.TType.STRING, (short) 7);

	private static final org.apache.thrift.protocol.TField SECRET_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"secret", org.apache.thrift.protocol.TType.STRING, (short) 8);

	private static final org.apache.thrift.protocol.TField APPLY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"applyTime", org.apache.thrift.protocol.TType.STRING, (short) 9);

	private static final org.apache.thrift.protocol.TField EXPIRE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"expireTime", org.apache.thrift.protocol.TType.STRING, (short) 10);

	private static final org.apache.thrift.protocol.TField IS_DEFAULT_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"isDefault", org.apache.thrift.protocol.TType.BOOL, (short) 11);

	private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ArgUserBankCardStandardSchemeFactory();

	private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ArgUserBankCardTupleSchemeFactory();

	public @org.apache.thrift.annotation.Nullable java.lang.String acc; // optional

	public @org.apache.thrift.annotation.Nullable java.lang.String uid; // optional

	public @org.apache.thrift.annotation.Nullable java.lang.String number; // optional

	public @org.apache.thrift.annotation.Nullable java.lang.String name; // optional

	public @org.apache.thrift.annotation.Nullable java.lang.String phone; // optional

	public @org.apache.thrift.annotation.Nullable java.lang.String bank; // optional

	public @org.apache.thrift.annotation.Nullable java.lang.String bankStart; // optional

	public @org.apache.thrift.annotation.Nullable java.lang.String secret; // optional

	public @org.apache.thrift.annotation.Nullable java.lang.String applyTime; // optional

	public @org.apache.thrift.annotation.Nullable java.lang.String expireTime; // optional

	public boolean isDefault; // optional

	/**
	 * The set of fields this struct contains, along with convenience methods for finding
	 * and manipulating them.
	 */
	public enum _Fields implements org.apache.thrift.TFieldIdEnum {

		ACC((short) 1, "acc"), UID((short) 2, "uid"), NUMBER((short) 3, "number"), NAME((short) 4, "name"), PHONE(
				(short) 5, "phone"), BANK((short) 6, "bank"), BANK_START((short) 7, "bankStart"), SECRET((short) 8,
						"secret"), APPLY_TIME((short) 9, "applyTime"), EXPIRE_TIME((short) 10,
								"expireTime"), IS_DEFAULT((short) 11, "isDefault");

		private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

		static {
			for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
				byName.put(field.getFieldName(), field);
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, or null if its not found.
		 */
		@org.apache.thrift.annotation.Nullable
		public static _Fields findByThriftId(int fieldId) {
			switch (fieldId) {
			case 1: // ACC
				return ACC;
			case 2: // UID
				return UID;
			case 3: // NUMBER
				return NUMBER;
			case 4: // NAME
				return NAME;
			case 5: // PHONE
				return PHONE;
			case 6: // BANK
				return BANK;
			case 7: // BANK_START
				return BANK_START;
			case 8: // SECRET
				return SECRET;
			case 9: // APPLY_TIME
				return APPLY_TIME;
			case 10: // EXPIRE_TIME
				return EXPIRE_TIME;
			case 11: // IS_DEFAULT
				return IS_DEFAULT;
			default:
				return null;
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, throwing an exception if it is
		 * not found.
		 */
		public static _Fields findByThriftIdOrThrow(int fieldId) {
			_Fields fields = findByThriftId(fieldId);
			if (fields == null)
				throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
			return fields;
		}

		/**
		 * Find the _Fields constant that matches name, or null if its not found.
		 */
		@org.apache.thrift.annotation.Nullable
		public static _Fields findByName(java.lang.String name) {
			return byName.get(name);
		}

		private final short _thriftId;

		private final java.lang.String _fieldName;

		_Fields(short thriftId, java.lang.String fieldName) {
			_thriftId = thriftId;
			_fieldName = fieldName;
		}

		public short getThriftFieldId() {
			return _thriftId;
		}

		public java.lang.String getFieldName() {
			return _fieldName;
		}

	}

	// isset id assignments
	private static final int __ISDEFAULT_ISSET_ID = 0;

	private byte __isset_bitfield = 0;

	private static final _Fields optionals[] = { _Fields.ACC, _Fields.UID, _Fields.NUMBER, _Fields.NAME, _Fields.PHONE,
			_Fields.BANK, _Fields.BANK_START, _Fields.SECRET, _Fields.APPLY_TIME, _Fields.EXPIRE_TIME,
			_Fields.IS_DEFAULT };

	public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
	static {
		java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(
				_Fields.class);
		tmpMap.put(_Fields.ACC,
				new org.apache.thrift.meta_data.FieldMetaData("acc", org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.UID,
				new org.apache.thrift.meta_data.FieldMetaData("uid", org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.NUMBER,
				new org.apache.thrift.meta_data.FieldMetaData("number",
						org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.NAME,
				new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.PHONE,
				new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.BANK,
				new org.apache.thrift.meta_data.FieldMetaData("bank", org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.BANK_START,
				new org.apache.thrift.meta_data.FieldMetaData("bankStart",
						org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.SECRET,
				new org.apache.thrift.meta_data.FieldMetaData("secret",
						org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.APPLY_TIME, new org.apache.thrift.meta_data.FieldMetaData("applyTime",
				org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, "Time")));
		tmpMap.put(_Fields.EXPIRE_TIME, new org.apache.thrift.meta_data.FieldMetaData("expireTime",
				org.apache.thrift.TFieldRequirementType.OPTIONAL,
				new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, "Time")));
		tmpMap.put(_Fields.IS_DEFAULT,
				new org.apache.thrift.meta_data.FieldMetaData("isDefault",
						org.apache.thrift.TFieldRequirementType.OPTIONAL,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
		metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
		org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ArgUserBankCard.class, metaDataMap);
	}

	public ArgUserBankCard() {
	}

	/**
	 * Performs a deep copy on <i>other</i>.
	 */
	public ArgUserBankCard(ArgUserBankCard other) {
		__isset_bitfield = other.__isset_bitfield;
		if (other.isSetAcc()) {
			this.acc = other.acc;
		}
		if (other.isSetUid()) {
			this.uid = other.uid;
		}
		if (other.isSetNumber()) {
			this.number = other.number;
		}
		if (other.isSetName()) {
			this.name = other.name;
		}
		if (other.isSetPhone()) {
			this.phone = other.phone;
		}
		if (other.isSetBank()) {
			this.bank = other.bank;
		}
		if (other.isSetBankStart()) {
			this.bankStart = other.bankStart;
		}
		if (other.isSetSecret()) {
			this.secret = other.secret;
		}
		if (other.isSetApplyTime()) {
			this.applyTime = other.applyTime;
		}
		if (other.isSetExpireTime()) {
			this.expireTime = other.expireTime;
		}
		this.isDefault = other.isDefault;
	}

	public ArgUserBankCard deepCopy() {
		return new ArgUserBankCard(this);
	}

	@Override
	public void clear() {
		this.acc = null;
		this.uid = null;
		this.number = null;
		this.name = null;
		this.phone = null;
		this.bank = null;
		this.bankStart = null;
		this.secret = null;
		this.applyTime = null;
		this.expireTime = null;
		setIsDefaultIsSet(false);
		this.isDefault = false;
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getAcc() {
		return this.acc;
	}

	public ArgUserBankCard setAcc(@org.apache.thrift.annotation.Nullable java.lang.String acc) {
		this.acc = acc;
		return this;
	}

	public void unsetAcc() {
		this.acc = null;
	}

	/**
	 * Returns true if field acc is set (has been assigned a value) and false otherwise
	 */
	public boolean isSetAcc() {
		return this.acc != null;
	}

	public void setAccIsSet(boolean value) {
		if (!value) {
			this.acc = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getUid() {
		return this.uid;
	}

	public ArgUserBankCard setUid(@org.apache.thrift.annotation.Nullable java.lang.String uid) {
		this.uid = uid;
		return this;
	}

	public void unsetUid() {
		this.uid = null;
	}

	/**
	 * Returns true if field uid is set (has been assigned a value) and false otherwise
	 */
	public boolean isSetUid() {
		return this.uid != null;
	}

	public void setUidIsSet(boolean value) {
		if (!value) {
			this.uid = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getNumber() {
		return this.number;
	}

	public ArgUserBankCard setNumber(@org.apache.thrift.annotation.Nullable java.lang.String number) {
		this.number = number;
		return this;
	}

	public void unsetNumber() {
		this.number = null;
	}

	/**
	 * Returns true if field number is set (has been assigned a value) and false otherwise
	 */
	public boolean isSetNumber() {
		return this.number != null;
	}

	public void setNumberIsSet(boolean value) {
		if (!value) {
			this.number = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getName() {
		return this.name;
	}

	public ArgUserBankCard setName(@org.apache.thrift.annotation.Nullable java.lang.String name) {
		this.name = name;
		return this;
	}

	public void unsetName() {
		this.name = null;
	}

	/**
	 * Returns true if field name is set (has been assigned a value) and false otherwise
	 */
	public boolean isSetName() {
		return this.name != null;
	}

	public void setNameIsSet(boolean value) {
		if (!value) {
			this.name = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getPhone() {
		return this.phone;
	}

	public ArgUserBankCard setPhone(@org.apache.thrift.annotation.Nullable java.lang.String phone) {
		this.phone = phone;
		return this;
	}

	public void unsetPhone() {
		this.phone = null;
	}

	/**
	 * Returns true if field phone is set (has been assigned a value) and false otherwise
	 */
	public boolean isSetPhone() {
		return this.phone != null;
	}

	public void setPhoneIsSet(boolean value) {
		if (!value) {
			this.phone = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getBank() {
		return this.bank;
	}

	public ArgUserBankCard setBank(@org.apache.thrift.annotation.Nullable java.lang.String bank) {
		this.bank = bank;
		return this;
	}

	public void unsetBank() {
		this.bank = null;
	}

	/**
	 * Returns true if field bank is set (has been assigned a value) and false otherwise
	 */
	public boolean isSetBank() {
		return this.bank != null;
	}

	public void setBankIsSet(boolean value) {
		if (!value) {
			this.bank = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getBankStart() {
		return this.bankStart;
	}

	public ArgUserBankCard setBankStart(@org.apache.thrift.annotation.Nullable java.lang.String bankStart) {
		this.bankStart = bankStart;
		return this;
	}

	public void unsetBankStart() {
		this.bankStart = null;
	}

	/**
	 * Returns true if field bankStart is set (has been assigned a value) and false
	 * otherwise
	 */
	public boolean isSetBankStart() {
		return this.bankStart != null;
	}

	public void setBankStartIsSet(boolean value) {
		if (!value) {
			this.bankStart = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getSecret() {
		return this.secret;
	}

	public ArgUserBankCard setSecret(@org.apache.thrift.annotation.Nullable java.lang.String secret) {
		this.secret = secret;
		return this;
	}

	public void unsetSecret() {
		this.secret = null;
	}

	/**
	 * Returns true if field secret is set (has been assigned a value) and false otherwise
	 */
	public boolean isSetSecret() {
		return this.secret != null;
	}

	public void setSecretIsSet(boolean value) {
		if (!value) {
			this.secret = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getApplyTime() {
		return this.applyTime;
	}

	public ArgUserBankCard setApplyTime(@org.apache.thrift.annotation.Nullable java.lang.String applyTime) {
		this.applyTime = applyTime;
		return this;
	}

	public void unsetApplyTime() {
		this.applyTime = null;
	}

	/**
	 * Returns true if field applyTime is set (has been assigned a value) and false
	 * otherwise
	 */
	public boolean isSetApplyTime() {
		return this.applyTime != null;
	}

	public void setApplyTimeIsSet(boolean value) {
		if (!value) {
			this.applyTime = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getExpireTime() {
		return this.expireTime;
	}

	public ArgUserBankCard setExpireTime(@org.apache.thrift.annotation.Nullable java.lang.String expireTime) {
		this.expireTime = expireTime;
		return this;
	}

	public void unsetExpireTime() {
		this.expireTime = null;
	}

	/**
	 * Returns true if field expireTime is set (has been assigned a value) and false
	 * otherwise
	 */
	public boolean isSetExpireTime() {
		return this.expireTime != null;
	}

	public void setExpireTimeIsSet(boolean value) {
		if (!value) {
			this.expireTime = null;
		}
	}

	public boolean isIsDefault() {
		return this.isDefault;
	}

	public ArgUserBankCard setIsDefault(boolean isDefault) {
		this.isDefault = isDefault;
		setIsDefaultIsSet(true);
		return this;
	}

	public void unsetIsDefault() {
		__isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISDEFAULT_ISSET_ID);
	}

	/**
	 * Returns true if field isDefault is set (has been assigned a value) and false
	 * otherwise
	 */
	public boolean isSetIsDefault() {
		return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISDEFAULT_ISSET_ID);
	}

	public void setIsDefaultIsSet(boolean value) {
		__isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISDEFAULT_ISSET_ID, value);
	}

	public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
		switch (field) {
		case ACC:
			if (value == null) {
				unsetAcc();
			}
			else {
				setAcc((java.lang.String) value);
			}
			break;

		case UID:
			if (value == null) {
				unsetUid();
			}
			else {
				setUid((java.lang.String) value);
			}
			break;

		case NUMBER:
			if (value == null) {
				unsetNumber();
			}
			else {
				setNumber((java.lang.String) value);
			}
			break;

		case NAME:
			if (value == null) {
				unsetName();
			}
			else {
				setName((java.lang.String) value);
			}
			break;

		case PHONE:
			if (value == null) {
				unsetPhone();
			}
			else {
				setPhone((java.lang.String) value);
			}
			break;

		case BANK:
			if (value == null) {
				unsetBank();
			}
			else {
				setBank((java.lang.String) value);
			}
			break;

		case BANK_START:
			if (value == null) {
				unsetBankStart();
			}
			else {
				setBankStart((java.lang.String) value);
			}
			break;

		case SECRET:
			if (value == null) {
				unsetSecret();
			}
			else {
				setSecret((java.lang.String) value);
			}
			break;

		case APPLY_TIME:
			if (value == null) {
				unsetApplyTime();
			}
			else {
				setApplyTime((java.lang.String) value);
			}
			break;

		case EXPIRE_TIME:
			if (value == null) {
				unsetExpireTime();
			}
			else {
				setExpireTime((java.lang.String) value);
			}
			break;

		case IS_DEFAULT:
			if (value == null) {
				unsetIsDefault();
			}
			else {
				setIsDefault((java.lang.Boolean) value);
			}
			break;

		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.Object getFieldValue(_Fields field) {
		switch (field) {
		case ACC:
			return getAcc();

		case UID:
			return getUid();

		case NUMBER:
			return getNumber();

		case NAME:
			return getName();

		case PHONE:
			return getPhone();

		case BANK:
			return getBank();

		case BANK_START:
			return getBankStart();

		case SECRET:
			return getSecret();

		case APPLY_TIME:
			return getApplyTime();

		case EXPIRE_TIME:
			return getExpireTime();

		case IS_DEFAULT:
			return isIsDefault();

		}
		throw new java.lang.IllegalStateException();
	}

	/**
	 * Returns true if field corresponding to fieldID is set (has been assigned a value)
	 * and false otherwise
	 */
	public boolean isSet(_Fields field) {
		if (field == null) {
			throw new java.lang.IllegalArgumentException();
		}

		switch (field) {
		case ACC:
			return isSetAcc();
		case UID:
			return isSetUid();
		case NUMBER:
			return isSetNumber();
		case NAME:
			return isSetName();
		case PHONE:
			return isSetPhone();
		case BANK:
			return isSetBank();
		case BANK_START:
			return isSetBankStart();
		case SECRET:
			return isSetSecret();
		case APPLY_TIME:
			return isSetApplyTime();
		case EXPIRE_TIME:
			return isSetExpireTime();
		case IS_DEFAULT:
			return isSetIsDefault();
		}
		throw new java.lang.IllegalStateException();
	}

	@Override
	public boolean equals(java.lang.Object that) {
		if (that == null)
			return false;
		if (that instanceof ArgUserBankCard)
			return this.equals((ArgUserBankCard) that);
		return false;
	}

	public boolean equals(ArgUserBankCard that) {
		if (that == null)
			return false;
		if (this == that)
			return true;

		boolean this_present_acc = true && this.isSetAcc();
		boolean that_present_acc = true && that.isSetAcc();
		if (this_present_acc || that_present_acc) {
			if (!(this_present_acc && that_present_acc))
				return false;
			if (!this.acc.equals(that.acc))
				return false;
		}

		boolean this_present_uid = true && this.isSetUid();
		boolean that_present_uid = true && that.isSetUid();
		if (this_present_uid || that_present_uid) {
			if (!(this_present_uid && that_present_uid))
				return false;
			if (!this.uid.equals(that.uid))
				return false;
		}

		boolean this_present_number = true && this.isSetNumber();
		boolean that_present_number = true && that.isSetNumber();
		if (this_present_number || that_present_number) {
			if (!(this_present_number && that_present_number))
				return false;
			if (!this.number.equals(that.number))
				return false;
		}

		boolean this_present_name = true && this.isSetName();
		boolean that_present_name = true && that.isSetName();
		if (this_present_name || that_present_name) {
			if (!(this_present_name && that_present_name))
				return false;
			if (!this.name.equals(that.name))
				return false;
		}

		boolean this_present_phone = true && this.isSetPhone();
		boolean that_present_phone = true && that.isSetPhone();
		if (this_present_phone || that_present_phone) {
			if (!(this_present_phone && that_present_phone))
				return false;
			if (!this.phone.equals(that.phone))
				return false;
		}

		boolean this_present_bank = true && this.isSetBank();
		boolean that_present_bank = true && that.isSetBank();
		if (this_present_bank || that_present_bank) {
			if (!(this_present_bank && that_present_bank))
				return false;
			if (!this.bank.equals(that.bank))
				return false;
		}

		boolean this_present_bankStart = true && this.isSetBankStart();
		boolean that_present_bankStart = true && that.isSetBankStart();
		if (this_present_bankStart || that_present_bankStart) {
			if (!(this_present_bankStart && that_present_bankStart))
				return false;
			if (!this.bankStart.equals(that.bankStart))
				return false;
		}

		boolean this_present_secret = true && this.isSetSecret();
		boolean that_present_secret = true && that.isSetSecret();
		if (this_present_secret || that_present_secret) {
			if (!(this_present_secret && that_present_secret))
				return false;
			if (!this.secret.equals(that.secret))
				return false;
		}

		boolean this_present_applyTime = true && this.isSetApplyTime();
		boolean that_present_applyTime = true && that.isSetApplyTime();
		if (this_present_applyTime || that_present_applyTime) {
			if (!(this_present_applyTime && that_present_applyTime))
				return false;
			if (!this.applyTime.equals(that.applyTime))
				return false;
		}

		boolean this_present_expireTime = true && this.isSetExpireTime();
		boolean that_present_expireTime = true && that.isSetExpireTime();
		if (this_present_expireTime || that_present_expireTime) {
			if (!(this_present_expireTime && that_present_expireTime))
				return false;
			if (!this.expireTime.equals(that.expireTime))
				return false;
		}

		boolean this_present_isDefault = true && this.isSetIsDefault();
		boolean that_present_isDefault = true && that.isSetIsDefault();
		if (this_present_isDefault || that_present_isDefault) {
			if (!(this_present_isDefault && that_present_isDefault))
				return false;
			if (this.isDefault != that.isDefault)
				return false;
		}

		return true;
	}

	@Override
	public int hashCode() {
		int hashCode = 1;

		hashCode = hashCode * 8191 + ((isSetAcc()) ? 131071 : 524287);
		if (isSetAcc())
			hashCode = hashCode * 8191 + acc.hashCode();

		hashCode = hashCode * 8191 + ((isSetUid()) ? 131071 : 524287);
		if (isSetUid())
			hashCode = hashCode * 8191 + uid.hashCode();

		hashCode = hashCode * 8191 + ((isSetNumber()) ? 131071 : 524287);
		if (isSetNumber())
			hashCode = hashCode * 8191 + number.hashCode();

		hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
		if (isSetName())
			hashCode = hashCode * 8191 + name.hashCode();

		hashCode = hashCode * 8191 + ((isSetPhone()) ? 131071 : 524287);
		if (isSetPhone())
			hashCode = hashCode * 8191 + phone.hashCode();

		hashCode = hashCode * 8191 + ((isSetBank()) ? 131071 : 524287);
		if (isSetBank())
			hashCode = hashCode * 8191 + bank.hashCode();

		hashCode = hashCode * 8191 + ((isSetBankStart()) ? 131071 : 524287);
		if (isSetBankStart())
			hashCode = hashCode * 8191 + bankStart.hashCode();

		hashCode = hashCode * 8191 + ((isSetSecret()) ? 131071 : 524287);
		if (isSetSecret())
			hashCode = hashCode * 8191 + secret.hashCode();

		hashCode = hashCode * 8191 + ((isSetApplyTime()) ? 131071 : 524287);
		if (isSetApplyTime())
			hashCode = hashCode * 8191 + applyTime.hashCode();

		hashCode = hashCode * 8191 + ((isSetExpireTime()) ? 131071 : 524287);
		if (isSetExpireTime())
			hashCode = hashCode * 8191 + expireTime.hashCode();

		hashCode = hashCode * 8191 + ((isSetIsDefault()) ? 131071 : 524287);
		if (isSetIsDefault())
			hashCode = hashCode * 8191 + ((isDefault) ? 131071 : 524287);

		return hashCode;
	}

	@Override
	public int compareTo(ArgUserBankCard other) {
		if (!getClass().equals(other.getClass())) {
			return getClass().getName().compareTo(other.getClass().getName());
		}

		int lastComparison = 0;

		lastComparison = java.lang.Boolean.valueOf(isSetAcc()).compareTo(other.isSetAcc());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetAcc()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acc, other.acc);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetUid()).compareTo(other.isSetUid());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetUid()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uid, other.uid);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetNumber()).compareTo(other.isSetNumber());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetNumber()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number, other.number);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetName()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetPhone()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetBank()).compareTo(other.isSetBank());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetBank()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bank, other.bank);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetBankStart()).compareTo(other.isSetBankStart());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetBankStart()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankStart, other.bankStart);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetSecret()).compareTo(other.isSetSecret());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetSecret()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secret, other.secret);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetApplyTime()).compareTo(other.isSetApplyTime());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetApplyTime()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyTime, other.applyTime);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetExpireTime()).compareTo(other.isSetExpireTime());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetExpireTime()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expireTime, other.expireTime);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetIsDefault()).compareTo(other.isSetIsDefault());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetIsDefault()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isDefault, other.isDefault);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		return 0;
	}

	@org.apache.thrift.annotation.Nullable
	public _Fields fieldForId(int fieldId) {
		return _Fields.findByThriftId(fieldId);
	}

	public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
		scheme(iprot).read(iprot, this);
	}

	public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
		scheme(oprot).write(oprot, this);
	}

	@Override
	public java.lang.String toString() {
		java.lang.StringBuilder sb = new java.lang.StringBuilder("ArgUserBankCard(");
		boolean first = true;

		if (isSetAcc()) {
			sb.append("acc:");
			if (this.acc == null) {
				sb.append("null");
			}
			else {
				sb.append(this.acc);
			}
			first = false;
		}
		if (isSetUid()) {
			if (!first)
				sb.append(", ");
			sb.append("uid:");
			if (this.uid == null) {
				sb.append("null");
			}
			else {
				sb.append(this.uid);
			}
			first = false;
		}
		if (isSetNumber()) {
			if (!first)
				sb.append(", ");
			sb.append("number:");
			if (this.number == null) {
				sb.append("null");
			}
			else {
				sb.append(this.number);
			}
			first = false;
		}
		if (isSetName()) {
			if (!first)
				sb.append(", ");
			sb.append("name:");
			if (this.name == null) {
				sb.append("null");
			}
			else {
				sb.append(this.name);
			}
			first = false;
		}
		if (isSetPhone()) {
			if (!first)
				sb.append(", ");
			sb.append("phone:");
			if (this.phone == null) {
				sb.append("null");
			}
			else {
				sb.append(this.phone);
			}
			first = false;
		}
		if (isSetBank()) {
			if (!first)
				sb.append(", ");
			sb.append("bank:");
			if (this.bank == null) {
				sb.append("null");
			}
			else {
				sb.append(this.bank);
			}
			first = false;
		}
		if (isSetBankStart()) {
			if (!first)
				sb.append(", ");
			sb.append("bankStart:");
			if (this.bankStart == null) {
				sb.append("null");
			}
			else {
				sb.append(this.bankStart);
			}
			first = false;
		}
		if (isSetSecret()) {
			if (!first)
				sb.append(", ");
			sb.append("secret:");
			if (this.secret == null) {
				sb.append("null");
			}
			else {
				sb.append(this.secret);
			}
			first = false;
		}
		if (isSetApplyTime()) {
			if (!first)
				sb.append(", ");
			sb.append("applyTime:");
			if (this.applyTime == null) {
				sb.append("null");
			}
			else {
				sb.append(this.applyTime);
			}
			first = false;
		}
		if (isSetExpireTime()) {
			if (!first)
				sb.append(", ");
			sb.append("expireTime:");
			if (this.expireTime == null) {
				sb.append("null");
			}
			else {
				sb.append(this.expireTime);
			}
			first = false;
		}
		if (isSetIsDefault()) {
			if (!first)
				sb.append(", ");
			sb.append("isDefault:");
			sb.append(this.isDefault);
			first = false;
		}
		sb.append(")");
		return sb.toString();
	}

	public void validate() throws org.apache.thrift.TException {
		// check for required fields
		// check for sub-struct validity
	}

	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
		try {
			write(new org.apache.thrift.protocol.TCompactProtocol(
					new org.apache.thrift.transport.TIOStreamTransport(out)));
		}
		catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
		try {
			// it doesn't seem like you should have to do this, but java serialization is
			// wacky, and doesn't call the default constructor.
			__isset_bitfield = 0;
			read(new org.apache.thrift.protocol.TCompactProtocol(
					new org.apache.thrift.transport.TIOStreamTransport(in)));
		}
		catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private static class ArgUserBankCardStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {

		public ArgUserBankCardStandardScheme getScheme() {
			return new ArgUserBankCardStandardScheme();
		}

	}

	private static class ArgUserBankCardStandardScheme
			extends org.apache.thrift.scheme.StandardScheme<ArgUserBankCard> {

		public void read(org.apache.thrift.protocol.TProtocol iprot, ArgUserBankCard struct)
				throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TField schemeField;
			iprot.readStructBegin();
			while (true) {
				schemeField = iprot.readFieldBegin();
				if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
					break;
				}
				switch (schemeField.id) {
				case 1: // ACC
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.acc = iprot.readString();
						struct.setAccIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 2: // UID
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.uid = iprot.readString();
						struct.setUidIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 3: // NUMBER
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.number = iprot.readString();
						struct.setNumberIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 4: // NAME
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.name = iprot.readString();
						struct.setNameIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 5: // PHONE
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.phone = iprot.readString();
						struct.setPhoneIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 6: // BANK
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.bank = iprot.readString();
						struct.setBankIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 7: // BANK_START
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.bankStart = iprot.readString();
						struct.setBankStartIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 8: // SECRET
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.secret = iprot.readString();
						struct.setSecretIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 9: // APPLY_TIME
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.applyTime = iprot.readString();
						struct.setApplyTimeIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 10: // EXPIRE_TIME
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.expireTime = iprot.readString();
						struct.setExpireTimeIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 11: // IS_DEFAULT
					if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
						struct.isDefault = iprot.readBool();
						struct.setIsDefaultIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				default:
					org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
				}
				iprot.readFieldEnd();
			}
			iprot.readStructEnd();

			// check for required fields of primitive type, which can't be checked in the
			// validate method
			struct.validate();
		}

		public void write(org.apache.thrift.protocol.TProtocol oprot, ArgUserBankCard struct)
				throws org.apache.thrift.TException {
			struct.validate();

			oprot.writeStructBegin(STRUCT_DESC);
			if (struct.acc != null) {
				if (struct.isSetAcc()) {
					oprot.writeFieldBegin(ACC_FIELD_DESC);
					oprot.writeString(struct.acc);
					oprot.writeFieldEnd();
				}
			}
			if (struct.uid != null) {
				if (struct.isSetUid()) {
					oprot.writeFieldBegin(UID_FIELD_DESC);
					oprot.writeString(struct.uid);
					oprot.writeFieldEnd();
				}
			}
			if (struct.number != null) {
				if (struct.isSetNumber()) {
					oprot.writeFieldBegin(NUMBER_FIELD_DESC);
					oprot.writeString(struct.number);
					oprot.writeFieldEnd();
				}
			}
			if (struct.name != null) {
				if (struct.isSetName()) {
					oprot.writeFieldBegin(NAME_FIELD_DESC);
					oprot.writeString(struct.name);
					oprot.writeFieldEnd();
				}
			}
			if (struct.phone != null) {
				if (struct.isSetPhone()) {
					oprot.writeFieldBegin(PHONE_FIELD_DESC);
					oprot.writeString(struct.phone);
					oprot.writeFieldEnd();
				}
			}
			if (struct.bank != null) {
				if (struct.isSetBank()) {
					oprot.writeFieldBegin(BANK_FIELD_DESC);
					oprot.writeString(struct.bank);
					oprot.writeFieldEnd();
				}
			}
			if (struct.bankStart != null) {
				if (struct.isSetBankStart()) {
					oprot.writeFieldBegin(BANK_START_FIELD_DESC);
					oprot.writeString(struct.bankStart);
					oprot.writeFieldEnd();
				}
			}
			if (struct.secret != null) {
				if (struct.isSetSecret()) {
					oprot.writeFieldBegin(SECRET_FIELD_DESC);
					oprot.writeString(struct.secret);
					oprot.writeFieldEnd();
				}
			}
			if (struct.applyTime != null) {
				if (struct.isSetApplyTime()) {
					oprot.writeFieldBegin(APPLY_TIME_FIELD_DESC);
					oprot.writeString(struct.applyTime);
					oprot.writeFieldEnd();
				}
			}
			if (struct.expireTime != null) {
				if (struct.isSetExpireTime()) {
					oprot.writeFieldBegin(EXPIRE_TIME_FIELD_DESC);
					oprot.writeString(struct.expireTime);
					oprot.writeFieldEnd();
				}
			}
			if (struct.isSetIsDefault()) {
				oprot.writeFieldBegin(IS_DEFAULT_FIELD_DESC);
				oprot.writeBool(struct.isDefault);
				oprot.writeFieldEnd();
			}
			oprot.writeFieldStop();
			oprot.writeStructEnd();
		}

	}

	private static class ArgUserBankCardTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {

		public ArgUserBankCardTupleScheme getScheme() {
			return new ArgUserBankCardTupleScheme();
		}

	}

	private static class ArgUserBankCardTupleScheme extends org.apache.thrift.scheme.TupleScheme<ArgUserBankCard> {

		@Override
		public void write(org.apache.thrift.protocol.TProtocol prot, ArgUserBankCard struct)
				throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
			java.util.BitSet optionals = new java.util.BitSet();
			if (struct.isSetAcc()) {
				optionals.set(0);
			}
			if (struct.isSetUid()) {
				optionals.set(1);
			}
			if (struct.isSetNumber()) {
				optionals.set(2);
			}
			if (struct.isSetName()) {
				optionals.set(3);
			}
			if (struct.isSetPhone()) {
				optionals.set(4);
			}
			if (struct.isSetBank()) {
				optionals.set(5);
			}
			if (struct.isSetBankStart()) {
				optionals.set(6);
			}
			if (struct.isSetSecret()) {
				optionals.set(7);
			}
			if (struct.isSetApplyTime()) {
				optionals.set(8);
			}
			if (struct.isSetExpireTime()) {
				optionals.set(9);
			}
			if (struct.isSetIsDefault()) {
				optionals.set(10);
			}
			oprot.writeBitSet(optionals, 11);
			if (struct.isSetAcc()) {
				oprot.writeString(struct.acc);
			}
			if (struct.isSetUid()) {
				oprot.writeString(struct.uid);
			}
			if (struct.isSetNumber()) {
				oprot.writeString(struct.number);
			}
			if (struct.isSetName()) {
				oprot.writeString(struct.name);
			}
			if (struct.isSetPhone()) {
				oprot.writeString(struct.phone);
			}
			if (struct.isSetBank()) {
				oprot.writeString(struct.bank);
			}
			if (struct.isSetBankStart()) {
				oprot.writeString(struct.bankStart);
			}
			if (struct.isSetSecret()) {
				oprot.writeString(struct.secret);
			}
			if (struct.isSetApplyTime()) {
				oprot.writeString(struct.applyTime);
			}
			if (struct.isSetExpireTime()) {
				oprot.writeString(struct.expireTime);
			}
			if (struct.isSetIsDefault()) {
				oprot.writeBool(struct.isDefault);
			}
		}

		@Override
		public void read(org.apache.thrift.protocol.TProtocol prot, ArgUserBankCard struct)
				throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
			java.util.BitSet incoming = iprot.readBitSet(11);
			if (incoming.get(0)) {
				struct.acc = iprot.readString();
				struct.setAccIsSet(true);
			}
			if (incoming.get(1)) {
				struct.uid = iprot.readString();
				struct.setUidIsSet(true);
			}
			if (incoming.get(2)) {
				struct.number = iprot.readString();
				struct.setNumberIsSet(true);
			}
			if (incoming.get(3)) {
				struct.name = iprot.readString();
				struct.setNameIsSet(true);
			}
			if (incoming.get(4)) {
				struct.phone = iprot.readString();
				struct.setPhoneIsSet(true);
			}
			if (incoming.get(5)) {
				struct.bank = iprot.readString();
				struct.setBankIsSet(true);
			}
			if (incoming.get(6)) {
				struct.bankStart = iprot.readString();
				struct.setBankStartIsSet(true);
			}
			if (incoming.get(7)) {
				struct.secret = iprot.readString();
				struct.setSecretIsSet(true);
			}
			if (incoming.get(8)) {
				struct.applyTime = iprot.readString();
				struct.setApplyTimeIsSet(true);
			}
			if (incoming.get(9)) {
				struct.expireTime = iprot.readString();
				struct.setExpireTimeIsSet(true);
			}
			if (incoming.get(10)) {
				struct.isDefault = iprot.readBool();
				struct.setIsDefaultIsSet(true);
			}
		}

	}

	private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
		return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY
				: TUPLE_SCHEME_FACTORY).getScheme();
	}

}
