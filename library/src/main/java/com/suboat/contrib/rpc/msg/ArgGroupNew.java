/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.suboat.contrib.rpc.msg;

@SuppressWarnings({ "cast", "rawtypes", "serial", "unchecked", "unused" })
public class ArgGroupNew implements org.apache.thrift.TBase<ArgGroupNew, ArgGroupNew._Fields>, java.io.Serializable,
		Cloneable, Comparable<ArgGroupNew> {

	private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(
			"ArgGroupNew");

	private static final org.apache.thrift.protocol.TField UID_FIELD_DESC = new org.apache.thrift.protocol.TField("uid",
			org.apache.thrift.protocol.TType.STRING, (short) 1);

	private static final org.apache.thrift.protocol.TField GROUP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"groupName", org.apache.thrift.protocol.TType.STRING, (short) 2);

	private static final org.apache.thrift.protocol.TField GROUP_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"groupInfo", org.apache.thrift.protocol.TType.STRING, (short) 3);

	private static final org.apache.thrift.protocol.TField MEMBER_UID_FIELD_DESC = new org.apache.thrift.protocol.TField(
			"memberUid", org.apache.thrift.protocol.TType.LIST, (short) 4);

	private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ArgGroupNewStandardSchemeFactory();

	private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ArgGroupNewTupleSchemeFactory();

	public @org.apache.thrift.annotation.Nullable java.lang.String uid; // required

	public @org.apache.thrift.annotation.Nullable java.lang.String groupName; // required

	public @org.apache.thrift.annotation.Nullable java.lang.String groupInfo; // required

	public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> memberUid; // required

	/**
	 * The set of fields this struct contains, along with convenience methods for finding
	 * and manipulating them.
	 */
	public enum _Fields implements org.apache.thrift.TFieldIdEnum {

		UID((short) 1, "uid"), GROUP_NAME((short) 2, "groupName"), GROUP_INFO((short) 3,
				"groupInfo"), MEMBER_UID((short) 4, "memberUid");

		private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

		static {
			for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
				byName.put(field.getFieldName(), field);
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, or null if its not found.
		 */
		@org.apache.thrift.annotation.Nullable
		public static _Fields findByThriftId(int fieldId) {
			switch (fieldId) {
			case 1: // UID
				return UID;
			case 2: // GROUP_NAME
				return GROUP_NAME;
			case 3: // GROUP_INFO
				return GROUP_INFO;
			case 4: // MEMBER_UID
				return MEMBER_UID;
			default:
				return null;
			}
		}

		/**
		 * Find the _Fields constant that matches fieldId, throwing an exception if it is
		 * not found.
		 */
		public static _Fields findByThriftIdOrThrow(int fieldId) {
			_Fields fields = findByThriftId(fieldId);
			if (fields == null)
				throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
			return fields;
		}

		/**
		 * Find the _Fields constant that matches name, or null if its not found.
		 */
		@org.apache.thrift.annotation.Nullable
		public static _Fields findByName(java.lang.String name) {
			return byName.get(name);
		}

		private final short _thriftId;

		private final java.lang.String _fieldName;

		_Fields(short thriftId, java.lang.String fieldName) {
			_thriftId = thriftId;
			_fieldName = fieldName;
		}

		public short getThriftFieldId() {
			return _thriftId;
		}

		public java.lang.String getFieldName() {
			return _fieldName;
		}

	}

	// isset id assignments
	public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
	static {
		java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(
				_Fields.class);
		tmpMap.put(_Fields.UID,
				new org.apache.thrift.meta_data.FieldMetaData("uid", org.apache.thrift.TFieldRequirementType.DEFAULT,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.GROUP_NAME,
				new org.apache.thrift.meta_data.FieldMetaData("groupName",
						org.apache.thrift.TFieldRequirementType.DEFAULT,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.GROUP_INFO,
				new org.apache.thrift.meta_data.FieldMetaData("groupInfo",
						org.apache.thrift.TFieldRequirementType.DEFAULT,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
		tmpMap.put(_Fields.MEMBER_UID, new org.apache.thrift.meta_data.FieldMetaData("memberUid",
				org.apache.thrift.TFieldRequirementType.DEFAULT,
				new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
						new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
		metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
		org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ArgGroupNew.class, metaDataMap);
	}

	public ArgGroupNew() {
	}

	public ArgGroupNew(java.lang.String uid, java.lang.String groupName, java.lang.String groupInfo,
			java.util.List<java.lang.String> memberUid) {
		this();
		this.uid = uid;
		this.groupName = groupName;
		this.groupInfo = groupInfo;
		this.memberUid = memberUid;
	}

	/**
	 * Performs a deep copy on <i>other</i>.
	 */
	public ArgGroupNew(ArgGroupNew other) {
		if (other.isSetUid()) {
			this.uid = other.uid;
		}
		if (other.isSetGroupName()) {
			this.groupName = other.groupName;
		}
		if (other.isSetGroupInfo()) {
			this.groupInfo = other.groupInfo;
		}
		if (other.isSetMemberUid()) {
			java.util.List<java.lang.String> __this__memberUid = new java.util.ArrayList<java.lang.String>(
					other.memberUid);
			this.memberUid = __this__memberUid;
		}
	}

	public ArgGroupNew deepCopy() {
		return new ArgGroupNew(this);
	}

	@Override
	public void clear() {
		this.uid = null;
		this.groupName = null;
		this.groupInfo = null;
		this.memberUid = null;
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getUid() {
		return this.uid;
	}

	public ArgGroupNew setUid(@org.apache.thrift.annotation.Nullable java.lang.String uid) {
		this.uid = uid;
		return this;
	}

	public void unsetUid() {
		this.uid = null;
	}

	/**
	 * Returns true if field uid is set (has been assigned a value) and false otherwise
	 */
	public boolean isSetUid() {
		return this.uid != null;
	}

	public void setUidIsSet(boolean value) {
		if (!value) {
			this.uid = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getGroupName() {
		return this.groupName;
	}

	public ArgGroupNew setGroupName(@org.apache.thrift.annotation.Nullable java.lang.String groupName) {
		this.groupName = groupName;
		return this;
	}

	public void unsetGroupName() {
		this.groupName = null;
	}

	/**
	 * Returns true if field groupName is set (has been assigned a value) and false
	 * otherwise
	 */
	public boolean isSetGroupName() {
		return this.groupName != null;
	}

	public void setGroupNameIsSet(boolean value) {
		if (!value) {
			this.groupName = null;
		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.String getGroupInfo() {
		return this.groupInfo;
	}

	public ArgGroupNew setGroupInfo(@org.apache.thrift.annotation.Nullable java.lang.String groupInfo) {
		this.groupInfo = groupInfo;
		return this;
	}

	public void unsetGroupInfo() {
		this.groupInfo = null;
	}

	/**
	 * Returns true if field groupInfo is set (has been assigned a value) and false
	 * otherwise
	 */
	public boolean isSetGroupInfo() {
		return this.groupInfo != null;
	}

	public void setGroupInfoIsSet(boolean value) {
		if (!value) {
			this.groupInfo = null;
		}
	}

	public int getMemberUidSize() {
		return (this.memberUid == null) ? 0 : this.memberUid.size();
	}

	@org.apache.thrift.annotation.Nullable
	public java.util.Iterator<java.lang.String> getMemberUidIterator() {
		return (this.memberUid == null) ? null : this.memberUid.iterator();
	}

	public void addToMemberUid(java.lang.String elem) {
		if (this.memberUid == null) {
			this.memberUid = new java.util.ArrayList<java.lang.String>();
		}
		this.memberUid.add(elem);
	}

	@org.apache.thrift.annotation.Nullable
	public java.util.List<java.lang.String> getMemberUid() {
		return this.memberUid;
	}

	public ArgGroupNew setMemberUid(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> memberUid) {
		this.memberUid = memberUid;
		return this;
	}

	public void unsetMemberUid() {
		this.memberUid = null;
	}

	/**
	 * Returns true if field memberUid is set (has been assigned a value) and false
	 * otherwise
	 */
	public boolean isSetMemberUid() {
		return this.memberUid != null;
	}

	public void setMemberUidIsSet(boolean value) {
		if (!value) {
			this.memberUid = null;
		}
	}

	public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
		switch (field) {
		case UID:
			if (value == null) {
				unsetUid();
			}
			else {
				setUid((java.lang.String) value);
			}
			break;

		case GROUP_NAME:
			if (value == null) {
				unsetGroupName();
			}
			else {
				setGroupName((java.lang.String) value);
			}
			break;

		case GROUP_INFO:
			if (value == null) {
				unsetGroupInfo();
			}
			else {
				setGroupInfo((java.lang.String) value);
			}
			break;

		case MEMBER_UID:
			if (value == null) {
				unsetMemberUid();
			}
			else {
				setMemberUid((java.util.List<java.lang.String>) value);
			}
			break;

		}
	}

	@org.apache.thrift.annotation.Nullable
	public java.lang.Object getFieldValue(_Fields field) {
		switch (field) {
		case UID:
			return getUid();

		case GROUP_NAME:
			return getGroupName();

		case GROUP_INFO:
			return getGroupInfo();

		case MEMBER_UID:
			return getMemberUid();

		}
		throw new java.lang.IllegalStateException();
	}

	/**
	 * Returns true if field corresponding to fieldID is set (has been assigned a value)
	 * and false otherwise
	 */
	public boolean isSet(_Fields field) {
		if (field == null) {
			throw new java.lang.IllegalArgumentException();
		}

		switch (field) {
		case UID:
			return isSetUid();
		case GROUP_NAME:
			return isSetGroupName();
		case GROUP_INFO:
			return isSetGroupInfo();
		case MEMBER_UID:
			return isSetMemberUid();
		}
		throw new java.lang.IllegalStateException();
	}

	@Override
	public boolean equals(java.lang.Object that) {
		if (that == null)
			return false;
		if (that instanceof ArgGroupNew)
			return this.equals((ArgGroupNew) that);
		return false;
	}

	public boolean equals(ArgGroupNew that) {
		if (that == null)
			return false;
		if (this == that)
			return true;

		boolean this_present_uid = true && this.isSetUid();
		boolean that_present_uid = true && that.isSetUid();
		if (this_present_uid || that_present_uid) {
			if (!(this_present_uid && that_present_uid))
				return false;
			if (!this.uid.equals(that.uid))
				return false;
		}

		boolean this_present_groupName = true && this.isSetGroupName();
		boolean that_present_groupName = true && that.isSetGroupName();
		if (this_present_groupName || that_present_groupName) {
			if (!(this_present_groupName && that_present_groupName))
				return false;
			if (!this.groupName.equals(that.groupName))
				return false;
		}

		boolean this_present_groupInfo = true && this.isSetGroupInfo();
		boolean that_present_groupInfo = true && that.isSetGroupInfo();
		if (this_present_groupInfo || that_present_groupInfo) {
			if (!(this_present_groupInfo && that_present_groupInfo))
				return false;
			if (!this.groupInfo.equals(that.groupInfo))
				return false;
		}

		boolean this_present_memberUid = true && this.isSetMemberUid();
		boolean that_present_memberUid = true && that.isSetMemberUid();
		if (this_present_memberUid || that_present_memberUid) {
			if (!(this_present_memberUid && that_present_memberUid))
				return false;
			if (!this.memberUid.equals(that.memberUid))
				return false;
		}

		return true;
	}

	@Override
	public int hashCode() {
		int hashCode = 1;

		hashCode = hashCode * 8191 + ((isSetUid()) ? 131071 : 524287);
		if (isSetUid())
			hashCode = hashCode * 8191 + uid.hashCode();

		hashCode = hashCode * 8191 + ((isSetGroupName()) ? 131071 : 524287);
		if (isSetGroupName())
			hashCode = hashCode * 8191 + groupName.hashCode();

		hashCode = hashCode * 8191 + ((isSetGroupInfo()) ? 131071 : 524287);
		if (isSetGroupInfo())
			hashCode = hashCode * 8191 + groupInfo.hashCode();

		hashCode = hashCode * 8191 + ((isSetMemberUid()) ? 131071 : 524287);
		if (isSetMemberUid())
			hashCode = hashCode * 8191 + memberUid.hashCode();

		return hashCode;
	}

	@Override
	public int compareTo(ArgGroupNew other) {
		if (!getClass().equals(other.getClass())) {
			return getClass().getName().compareTo(other.getClass().getName());
		}

		int lastComparison = 0;

		lastComparison = java.lang.Boolean.valueOf(isSetUid()).compareTo(other.isSetUid());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetUid()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uid, other.uid);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetGroupName()).compareTo(other.isSetGroupName());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetGroupName()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupName, other.groupName);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetGroupInfo()).compareTo(other.isSetGroupInfo());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetGroupInfo()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupInfo, other.groupInfo);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		lastComparison = java.lang.Boolean.valueOf(isSetMemberUid()).compareTo(other.isSetMemberUid());
		if (lastComparison != 0) {
			return lastComparison;
		}
		if (isSetMemberUid()) {
			lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberUid, other.memberUid);
			if (lastComparison != 0) {
				return lastComparison;
			}
		}
		return 0;
	}

	@org.apache.thrift.annotation.Nullable
	public _Fields fieldForId(int fieldId) {
		return _Fields.findByThriftId(fieldId);
	}

	public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
		scheme(iprot).read(iprot, this);
	}

	public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
		scheme(oprot).write(oprot, this);
	}

	@Override
	public java.lang.String toString() {
		java.lang.StringBuilder sb = new java.lang.StringBuilder("ArgGroupNew(");
		boolean first = true;

		sb.append("uid:");
		if (this.uid == null) {
			sb.append("null");
		}
		else {
			sb.append(this.uid);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("groupName:");
		if (this.groupName == null) {
			sb.append("null");
		}
		else {
			sb.append(this.groupName);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("groupInfo:");
		if (this.groupInfo == null) {
			sb.append("null");
		}
		else {
			sb.append(this.groupInfo);
		}
		first = false;
		if (!first)
			sb.append(", ");
		sb.append("memberUid:");
		if (this.memberUid == null) {
			sb.append("null");
		}
		else {
			sb.append(this.memberUid);
		}
		first = false;
		sb.append(")");
		return sb.toString();
	}

	public void validate() throws org.apache.thrift.TException {
		// check for required fields
		// check for sub-struct validity
	}

	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
		try {
			write(new org.apache.thrift.protocol.TCompactProtocol(
					new org.apache.thrift.transport.TIOStreamTransport(out)));
		}
		catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
		try {
			read(new org.apache.thrift.protocol.TCompactProtocol(
					new org.apache.thrift.transport.TIOStreamTransport(in)));
		}
		catch (org.apache.thrift.TException te) {
			throw new java.io.IOException(te);
		}
	}

	private static class ArgGroupNewStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {

		public ArgGroupNewStandardScheme getScheme() {
			return new ArgGroupNewStandardScheme();
		}

	}

	private static class ArgGroupNewStandardScheme extends org.apache.thrift.scheme.StandardScheme<ArgGroupNew> {

		public void read(org.apache.thrift.protocol.TProtocol iprot, ArgGroupNew struct)
				throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TField schemeField;
			iprot.readStructBegin();
			while (true) {
				schemeField = iprot.readFieldBegin();
				if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
					break;
				}
				switch (schemeField.id) {
				case 1: // UID
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.uid = iprot.readString();
						struct.setUidIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 2: // GROUP_NAME
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.groupName = iprot.readString();
						struct.setGroupNameIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 3: // GROUP_INFO
					if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
						struct.groupInfo = iprot.readString();
						struct.setGroupInfoIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				case 4: // MEMBER_UID
					if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
						{
							org.apache.thrift.protocol.TList _list40 = iprot.readListBegin();
							struct.memberUid = new java.util.ArrayList<java.lang.String>(_list40.size);
							@org.apache.thrift.annotation.Nullable
							java.lang.String _elem41;
							for (int _i42 = 0; _i42 < _list40.size; ++_i42) {
								_elem41 = iprot.readString();
								struct.memberUid.add(_elem41);
							}
							iprot.readListEnd();
						}
						struct.setMemberUidIsSet(true);
					}
					else {
						org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
					}
					break;
				default:
					org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
				}
				iprot.readFieldEnd();
			}
			iprot.readStructEnd();

			// check for required fields of primitive type, which can't be checked in the
			// validate method
			struct.validate();
		}

		public void write(org.apache.thrift.protocol.TProtocol oprot, ArgGroupNew struct)
				throws org.apache.thrift.TException {
			struct.validate();

			oprot.writeStructBegin(STRUCT_DESC);
			if (struct.uid != null) {
				oprot.writeFieldBegin(UID_FIELD_DESC);
				oprot.writeString(struct.uid);
				oprot.writeFieldEnd();
			}
			if (struct.groupName != null) {
				oprot.writeFieldBegin(GROUP_NAME_FIELD_DESC);
				oprot.writeString(struct.groupName);
				oprot.writeFieldEnd();
			}
			if (struct.groupInfo != null) {
				oprot.writeFieldBegin(GROUP_INFO_FIELD_DESC);
				oprot.writeString(struct.groupInfo);
				oprot.writeFieldEnd();
			}
			if (struct.memberUid != null) {
				oprot.writeFieldBegin(MEMBER_UID_FIELD_DESC);
				{
					oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,
							struct.memberUid.size()));
					for (java.lang.String _iter43 : struct.memberUid) {
						oprot.writeString(_iter43);
					}
					oprot.writeListEnd();
				}
				oprot.writeFieldEnd();
			}
			oprot.writeFieldStop();
			oprot.writeStructEnd();
		}

	}

	private static class ArgGroupNewTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {

		public ArgGroupNewTupleScheme getScheme() {
			return new ArgGroupNewTupleScheme();
		}

	}

	private static class ArgGroupNewTupleScheme extends org.apache.thrift.scheme.TupleScheme<ArgGroupNew> {

		@Override
		public void write(org.apache.thrift.protocol.TProtocol prot, ArgGroupNew struct)
				throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
			java.util.BitSet optionals = new java.util.BitSet();
			if (struct.isSetUid()) {
				optionals.set(0);
			}
			if (struct.isSetGroupName()) {
				optionals.set(1);
			}
			if (struct.isSetGroupInfo()) {
				optionals.set(2);
			}
			if (struct.isSetMemberUid()) {
				optionals.set(3);
			}
			oprot.writeBitSet(optionals, 4);
			if (struct.isSetUid()) {
				oprot.writeString(struct.uid);
			}
			if (struct.isSetGroupName()) {
				oprot.writeString(struct.groupName);
			}
			if (struct.isSetGroupInfo()) {
				oprot.writeString(struct.groupInfo);
			}
			if (struct.isSetMemberUid()) {
				{
					oprot.writeI32(struct.memberUid.size());
					for (java.lang.String _iter44 : struct.memberUid) {
						oprot.writeString(_iter44);
					}
				}
			}
		}

		@Override
		public void read(org.apache.thrift.protocol.TProtocol prot, ArgGroupNew struct)
				throws org.apache.thrift.TException {
			org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
			java.util.BitSet incoming = iprot.readBitSet(4);
			if (incoming.get(0)) {
				struct.uid = iprot.readString();
				struct.setUidIsSet(true);
			}
			if (incoming.get(1)) {
				struct.groupName = iprot.readString();
				struct.setGroupNameIsSet(true);
			}
			if (incoming.get(2)) {
				struct.groupInfo = iprot.readString();
				struct.setGroupInfoIsSet(true);
			}
			if (incoming.get(3)) {
				{
					org.apache.thrift.protocol.TList _list45 = new org.apache.thrift.protocol.TList(
							org.apache.thrift.protocol.TType.STRING, iprot.readI32());
					struct.memberUid = new java.util.ArrayList<java.lang.String>(_list45.size);
					@org.apache.thrift.annotation.Nullable
					java.lang.String _elem46;
					for (int _i47 = 0; _i47 < _list45.size; ++_i47) {
						_elem46 = iprot.readString();
						struct.memberUid.add(_elem46);
					}
				}
				struct.setMemberUidIsSet(true);
			}
		}

	}

	private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
		return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY
				: TUPLE_SCHEME_FACTORY).getScheme();
	}

}
